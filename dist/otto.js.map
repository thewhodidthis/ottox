{"version":3,"file":"otto.js","sources":["../index.es"],"sourcesContent":["// # Otto\n// Helps deal CAs\n\n// Wrap index round edges\n// http://stackoverflow.com/questions/1082917/mod-of-negative-number-is-melting-my-brain\nconst myMod = (a, b) => a - (b * Math.floor(a / b));\nconst zeros = (1024).toString(2).split('').slice(1).join('');\nconst zerosMax = zeros.length;\n\n// Rule to binary convert\nconst parseRule = (rule) => {\n  // Base 2 digits\n  const code = Number(rule).toString(2);\n\n  // No padding past 10\n  const diff = Math.max(zerosMax, zerosMax - code.length);\n\n  // Zero pad ruleset if need be\n  return `${zeros}${code}`.substr(diff).split('').reverse();\n};\n\n// Defaults\nconst data = {\n  size: 1,\n  rule: 30,\n\n  // How far from center lie the neighbors\n  ends: [-1, 0, 1],\n\n  // Flip middle cell\n  seed: (v, i, view) => i === Math.floor(view.length * 0.5),\n\n  // Index based lookup\n  stat: (hood, code) => {\n    const flags = hood.join('').toString(2);\n    const stats = parseInt(flags, 2);\n\n    return code[stats];\n  },\n};\n\n// Setup\nconst Otto = (opts) => {\n  // Merge options and defaults\n  const { size, rule, ends, stat, seed } = Object.assign({}, data, opts);\n\n  // Rule 90 would be ['0', '1', '0', '1', '1', '0', '1']\n  const code = parseRule(rule);\n\n  // Calculate state\n  const step = (v, i, view) => {\n    // Collect neighboring flags\n    const hood = ends.map((span) => {\n      // The index for each neighbor\n      const site = myMod(span + i, view.length);\n\n      // The state of each neighbor\n      return view[site];\n    });\n\n    return stat(hood, code, v);\n  };\n\n  // Clipboard, zero filled, need to work out adjustable size part\n  let grid = new Uint8Array(size);\n  let next = seed;\n\n  // Tick\n  return () => {\n    grid = grid.map(next);\n    next = step;\n\n    return grid;\n  };\n};\n\nexport default Otto;\n\n"],"names":["myMod","a","b","Math","floor","zeros","toString","split","slice","join","zerosMax","length","parseRule","rule","code","Number","diff","max","substr","reverse","data","size","ends","seed","v","i","view","stat","hood","flags","stats","parseInt","Otto","opts","Object","assign","step","map","span","site","grid","Uint8Array","next"],"mappings":"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"}